{"version":3,"file":"static/js/552.980024da.chunk.js","mappings":"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","sources":["api/coins.ts","components/Button/Button.tsx","components/CoinChart/CoinChart.tsx","components/CoinDetailRow/CoinDetailRow.tsx","components/CoinsTable/CoinTableRow.tsx","components/CoinsTable/CoinsTable.tsx","components/Preloaders/CoinsTablePreloader.tsx","containers/Coins/Coins.tsx","hooks/store.ts","utils/timeFormatter.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { AppDispatch } from \"../store\";\r\nimport {\r\n  getCoinListPending,\r\n  getCoinListSuccess,\r\n  getCoinListFailure,\r\n} from \"../store/reducers/coinSlice\";\r\nimport { ICoinResponseData, ICoinsListResponseData } from \"../types/coins\";\r\nimport { GET_COIN_LIMIT, COIN_API } from \"../constans/values\";\r\nimport {\r\n  ICoinHistoryRequestData,\r\n  ICoinHistoryResponseData,\r\n} from \"../types/coinHistory\";\r\nimport {\r\n  getCoinHistoryFailure,\r\n  getCoinHistoryPending,\r\n  getCoinHistorySuccess,\r\n} from \"../store/reducers/historySlice\";\r\nimport {\r\n  getCoinDetailsFailure,\r\n  getCoinDetailsPending,\r\n  getCoinDetailsSuccess,\r\n} from \"../store/reducers/detailsSlice\";\r\n\r\nexport const fetchCoinsList = (offset: number) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(getCoinListPending());\r\n    const coinList = await axios.get<ICoinsListResponseData>(\r\n      `${COIN_API}/assets?limit=${GET_COIN_LIMIT}&offset=${offset}`\r\n    );\r\n    dispatch(getCoinListSuccess(coinList.data.data));\r\n  } catch (error: any) {\r\n    dispatch(getCoinListFailure(error.error));\r\n  }\r\n};\r\n\r\nexport const fetchCoinHistory =\r\n  ({\r\n    coinId,\r\n    period: { start, end },\r\n    interval = \"h1\",\r\n  }: ICoinHistoryRequestData) =>\r\n    async (dispatch: AppDispatch) => {\r\n      try {\r\n        dispatch(getCoinHistoryPending());\r\n        const coinHistory = await axios.get<ICoinHistoryResponseData>(\r\n          `${COIN_API}/assets/${coinId}/history?interval=${interval}&start=${start}&end=${end}`\r\n        );\r\n        dispatch(getCoinHistorySuccess(coinHistory.data.data));\r\n      } catch (error: any) {\r\n        dispatch(getCoinHistoryFailure(error));\r\n      }\r\n    };\r\n\r\nexport const fetchCoinDetails =\r\n  (coinId: string = \"\") =>\r\n    async (dispatch: AppDispatch) => {\r\n      try {\r\n        dispatch(getCoinDetailsPending());\r\n        const coinDetail = await axios.get<ICoinResponseData>(\r\n          `${COIN_API}/assets/${coinId}`\r\n        );\r\n        dispatch(getCoinDetailsSuccess(coinDetail.data.data));\r\n      } catch (error: any) {\r\n        dispatch(getCoinDetailsFailure(error));\r\n      }\r\n    };\r\n","import React from 'react'\r\n\r\ninterface IButtonProps {\r\n    children: JSX.Element | string | JSX.Element[],\r\n    clickHandler: () => void,\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = ({ children, clickHandler }) => {\r\n    return (\r\n        <button\r\n            onClick={clickHandler}\r\n            className='p-4 capitalize text-center dark:shadow-none transition-all rounded-full shadow-lg shadow-primary-300 hover:shadow-accent-300 dark:bg-bg-100 hover:dark:bg-accent-200 active:scale-95 active:shadow-primary-300  sm:p-3'>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useEffect, useRef } from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    ChartData,\r\n    ChartOptions,\r\n    registerables,\r\n} from 'chart.js';\r\nimport { ICoinHistory } from '../../types/coinHistory';\r\nimport { CHART_LABELS_FORMATS, DATE_FORMAT, GRAPH_COLOR_SHEMA, GRAPH_STATE, HISTORY_INTERVALS, MAX_TICKS_LIMIT } from '../../constans/values';\r\nimport moment from 'moment';\r\n\r\ninterface ICoinChartProps {\r\n    data: ICoinHistory[],\r\n    interval?: string,\r\n    isPositive: boolean,\r\n}\r\n\r\nChartJS.register(...registerables);\r\n\r\nconst CoinChart: React.FC<ICoinChartProps> = ({ data, isPositive, interval = HISTORY_INTERVALS.DAY }) => {\r\n    const chartRef = useRef<ChartJS>(null);\r\n    const labels = data.map(item => item.date);\r\n    const chartData: ChartData = {\r\n        labels: labels,\r\n        datasets: [{\r\n            fill: true,\r\n            pointStyle: false,\r\n            data: data.map(item => +item.priceUsd),\r\n        }],\r\n    };\r\n\r\n    const chartOptions: ChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        ...GRAPH_COLOR_SHEMA[isPositive ? GRAPH_STATE.POSITIVE : GRAPH_STATE.NEGATIVE],\r\n        interaction: {\r\n            intersect: false,\r\n        },\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    maxTicksLimit: MAX_TICKS_LIMIT,\r\n                    callback: (tickValue, index) => {\r\n                        return moment(labels[index]).format(CHART_LABELS_FORMATS[interval]);\r\n                    },\r\n                },\r\n            },\r\n            y: {\r\n                position: 'right',\r\n            },\r\n        },\r\n        plugins: {\r\n            tooltip: {\r\n                callbacks: {\r\n                    label: (context: any) => `${context.formattedValue} $`,\r\n                    title: (context: any) => moment(context[0].label).format(DATE_FORMAT.CHART_TOOLTIP_TITLE),\r\n                }\r\n            },\r\n            legend: {\r\n                display: false,\r\n            }\r\n        },\r\n    };\r\n\r\n    const chartResize = () => {\r\n        chartRef.current?.resize();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener('resize', chartResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', chartResize);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Chart\r\n            type='line'\r\n            ref={chartRef}\r\n            data={chartData}\r\n            options={chartOptions}\r\n            className='cursor-pointer'\r\n        />\r\n    )\r\n}\r\n\r\nexport default CoinChart","import React, { useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/store';\r\nimport { ICoin } from '../../types/coins';\r\nimport { getFormatedCurrentDate } from '../../utils/timeFormatter';\r\nimport { numberAug } from '../../utils/stringParser';\r\nimport CoinChart from '../CoinChart';\r\nimport { Link } from 'react-router-dom';\r\nimport { HISTORY_INTERVALS, ROUTES } from '../../constans/values';\r\nimport { resetHistoryState } from '../../store/reducers/historySlice';\r\n\r\ninterface ICoinDetailRowProps {\r\n    coin: ICoin,\r\n};\r\n\r\nconst CoinDetailRow: React.FC<ICoinDetailRowProps> = ({ coin: { id, name, symbol } }) => {\r\n    const {\r\n        isLoading,\r\n        data: historyList,\r\n        low,\r\n        high,\r\n        average,\r\n        isPositive\r\n    } = useAppSelector(state => state.history);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(resetHistoryState());\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <tr className='bg-white dark:bg-bg-200'>\r\n            <td colSpan={8}>\r\n                <div className=\"p-5 flex flex-col items-stretch justify-center lg:p-4 sm:p-2\">\r\n                    <div className='flex mb-5 items-center flex-wrap justify-between'>\r\n                        <div className='flex items-center justify-center mb-4'>\r\n                            <img\r\n                                src={`https://assets.coincap.io/assets/icons/${symbol.toLowerCase()}@2x.png`}\r\n                                alt={name}\r\n                                className='mr-5 w-16'\r\n                            />\r\n                            <div className=''>\r\n                                <p className='text-2xl mb-1'>{name} ({symbol})</p>\r\n                                <span className='block'>{getFormatedCurrentDate()}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='flex items-center justify-between gap-4 lg:flex-col lg:items-start lg:gap-3 sm:gap-2'>\r\n                            <div className='text-lg lg:text-base sm-text-sm'>\r\n                                <span className='m-3 text-primary-200 font-semibold uppercase'>High</span>\r\n                                <span>${numberAug(high, 5)}</span>\r\n                            </div>\r\n                            <div className='text-lg lg:text-base sm-text-sm'>\r\n                                <span className='m-3 text-primary-200 font-semibold uppercase'>Low</span>\r\n                                <span>${numberAug(low, 5)}</span>\r\n                            </div>\r\n                            <div className='text-lg lg:text-base sm-text-sm'>\r\n                                <span className='m-3 text-primary-200 font-semibold uppercase'>Average</span>\r\n                                <span>${numberAug(average, 5)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='my-5'>\r\n                        <CoinChart data={historyList} interval={HISTORY_INTERVALS.DAY} isPositive={isPositive} />\r\n                    </div>\r\n                    <Link\r\n                        to={`${ROUTES.DETAILS}/${id}`}\r\n                        className='px-6 py-4 mx-auto text-center rounded-full transition-all dark:shadow-none shadow-lg shadow-primary-300 hover:shadow-accent-300\r\n                        active:scale-95 active:shadow-primary-300 dark:bg-bg-100 hover:dark:bg-accent-200 sm:px-4 sm:py-3'\r\n                    >\r\n                        More Details\r\n                    </Link>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n};\r\n\r\nexport default CoinDetailRow;","import React from 'react'\r\nimport { ICoin } from '../../types/coins'\r\nimport { numberAug, priceFormater } from '../../utils/stringParser';\r\nimport CoinDetailRow from '../CoinDetailRow';\r\nimport { fetchCoinHistory } from '../../api/coins';\r\nimport { ICoinHistoryRequestData } from '../../types/coinHistory';\r\nimport { useAppDispatch } from '../../hooks/store';\r\nimport { getDateDayAgo } from '../../utils/timeFormatter';\r\n\r\n\r\ninterface ICoinTableRowProps {\r\n    coin: ICoin,\r\n    selectedId: string | null,\r\n    handleSelectCoin: (id: string) => void,\r\n};\r\n\r\nconst CoinTableRow: React.FC<ICoinTableRowProps> = ({ coin, selectedId, handleSelectCoin }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const handleCoinClick = (): void => {\r\n        handleSelectCoin(coin.id);\r\n        const requestData: ICoinHistoryRequestData = {\r\n            coinId: id,\r\n            interval: \"m5\",\r\n            period: {\r\n                start: getDateDayAgo(),\r\n                end: new Date().getTime(),\r\n            },\r\n        }\r\n        dispatch(fetchCoinHistory(requestData));\r\n    }\r\n\r\n    const { id,\r\n        rank,\r\n        symbol,\r\n        name,\r\n        supply,\r\n        marketCapUsd,\r\n        volumeUsd24Hr,\r\n        priceUsd,\r\n        changePercent24Hr,\r\n        vwap24Hr, } = coin;\r\n    return (\r\n        <>\r\n            <tr\r\n                className='cursor-pointer transition-all bg-white hover:bg-slate-100 dark:bg-bg-200 hover:dark:bg-bg-100 border-b border-primary-300 dark:border-bg-300'\r\n                onClick={handleCoinClick}\r\n            >\r\n                <td className='text-start p-4 md:p-2 sm:hidden '>{rank}</td>\r\n                <td className='flex text-start p-4 md:p-2 items-center '>\r\n                    <img\r\n                        src={`https://assets.coincap.io/assets/icons/${symbol.toLowerCase()}@2x.png`}\r\n                        alt={name}\r\n                        className='mr-3 w-10 sm:w-8'\r\n\r\n                    />\r\n                    <div>\r\n                        <div className='sm:text-sm'>\r\n                            {name}\r\n                        </div>\r\n                        <div className='sm:text-sm'>\r\n                            {symbol}\r\n                        </div>\r\n                    </div>\r\n\r\n                </td>\r\n                <td className='text-start p-4 md:p-2 sm:text-sm'>${numberAug(priceUsd)}</td>\r\n                <td className='text-start p-4 md:p-2 md:hidden '>${priceFormater(marketCapUsd)}</td>\r\n                <td className='text-start p-4 md:p-2 lg:hidden '>{priceFormater(supply)}</td>\r\n                <td className='text-start p-4 md:p-2 lg:hidden '>${priceFormater(vwap24Hr)}</td>\r\n                <td className='text-start p-4 md:p-2 md:hidden '>${priceFormater(volumeUsd24Hr)}</td>\r\n                <td className={\r\n                    `text-end p-4 md:p-2 sm:text-sm ${+changePercent24Hr <= 0\r\n                        ? \"text-chart-0\"\r\n                        : \"text-chart-1\"}`\r\n                }>\r\n                    {priceFormater(changePercent24Hr)}%\r\n                </td>\r\n            </tr>\r\n\r\n            {selectedId === id && <CoinDetailRow coin={coin} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CoinTableRow","import React, { useState } from 'react'\r\nimport { ICoin } from '../../types/coins'\r\nimport CoinTableRow from './CoinTableRow';\r\n\r\ninterface CoinsTableProps {\r\n    coins: ICoin[],\r\n}\r\n\r\nconst CoinsTable: React.FC<CoinsTableProps> = ({ coins }) => {\r\n    const [selectedCoinId, setSelectedId] = useState<string | null>(null);\r\n\r\n    const setSelectedIdCoin = (coinId: string): void => {\r\n        if (selectedCoinId === coinId) {\r\n            setSelectedId(null);\r\n        }\r\n        else {\r\n            setSelectedId(coinId);\r\n        }\r\n    }\r\n\r\n    const renderTableRow = (coinsList: ICoin[]) => {\r\n        return coinsList.map(coin => <CoinTableRow\r\n            key={coin.id}\r\n            coin={coin}\r\n            handleSelectCoin={setSelectedIdCoin}\r\n            selectedId={selectedCoinId}\r\n        />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <table className=\"table-auto w-full mx-auto relative border-collapse shadow-lg\">\r\n            <thead className='bg-accent-100  dark:bg-bg-300 sticky top-0'>\r\n                <tr className=''>\r\n                    <th className='text-start p-4 sm:hidden'>Rank</th>\r\n                    <th className='text-start p-4 sm:text-sm sm:p-2'>Name</th>\r\n                    <th className='text-start p-4 sm:text-sm sm:p-2'>Price</th>\r\n                    <th className='text-start p-4 md:hidden'>Market Cap</th>\r\n                    <th className='text-start p-4 lg:hidden'>Supply</th>\r\n                    <th className='text-start p-4 lg:hidden'>VWAP(24)</th>\r\n                    <th className='text-start p-4 md:hidden'>Volume(24)</th>\r\n                    <th className='text-end p-4 sm:text-sm sm:p-2'>Change(24)</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderTableRow(coins)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default CoinsTable;","import React from 'react'\r\nimport { GET_COIN_LIMIT } from '../../constans/values'\r\n\r\nconst CoinsTablePreloader: React.FC = () => {\r\n    return (\r\n        <div className='animate-pulse'>\r\n            {Array.from({ length: GET_COIN_LIMIT }).map((item, index) =>\r\n                <div key={index} className='h-20 md:h-14 w-full bg-accent-100 my-1 dark:bg-bg-200' />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinsTablePreloader","import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/store\";\r\nimport { fetchCoinsList } from \"../../api/coins\";\r\nimport CoinsTable from \"../../components/CoinsTable\";\r\nimport { resetCoinsState } from \"../../store/reducers/coinSlice\";\r\nimport { GET_COIN_LIMIT, GET_COIN_OFFSET } from \"../../constans/values\";\r\nimport CoinsTablePreloader from \"../../components/Preloaders/CoinsTablePreloader\";\r\nimport Button from \"../../components/Button\";\r\n\r\ninterface ICoinsProps { }\r\n\r\nconst Coins: React.FC<ICoinsProps> = () => {\r\n    const [offset, setOffset] = useState<number>(GET_COIN_OFFSET);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const { list, isLoading } = useAppSelector((state) => state.coins);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCoinsList(GET_COIN_OFFSET));\r\n\r\n        return () => {\r\n            dispatch(resetCoinsState());\r\n        };\r\n    }, []);\r\n\r\n    const loadMoreCoinsClickHandler = () => {\r\n        const nextOffsetValue = offset + GET_COIN_LIMIT;\r\n        dispatch(fetchCoinsList(nextOffsetValue));\r\n        setOffset(nextOffsetValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <CoinsTable coins={list} />\r\n            {isLoading && <CoinsTablePreloader />}\r\n            <div className=\"flex items-center justify-center my-4\">\r\n                <Button clickHandler={loadMoreCoinsClickHandler}>\r\n                    load more\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Coins;\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport type { TypedUseSelectorHook } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../store'\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import moment from \"moment\";\r\n// import { CHART_INTERVALS, HISTORY_INTERVALS } from \"../constans/values\";\r\n\r\nexport const getDateDayAgo = (): number => {\r\n  const currentDate = new Date().getTime();\r\n  const dayToMilliseconds = 24 * 60 * 60 * 1000;\r\n\r\n  return new Date(currentDate - dayToMilliseconds).getTime();\r\n};\r\n\r\nexport const calculateDate = (period: string): number => {\r\n  let now = new Date();\r\n\r\n  if (period === '1D') { // 1 день\r\n    return new Date(now.getTime() - (24 * 60 * 60 * 1000)).getTime();\r\n  }\r\n  if (period === '1W') { // 1 неделя\r\n    return new Date(now.getTime() - (7 * 24 * 60 * 60 * 1000)).getTime()\r\n  }\r\n  if (period === '1M') { // 1 месяц\r\n    now.setMonth(now.getMonth() - 1);\r\n    return now.getTime();\r\n  }\r\n  if (period === '3M') { // 3 месяца\r\n    now.setMonth(now.getMonth() - 3);\r\n    return now.getTime();\r\n  }\r\n  if (period === '6M') { // 6 месяцев\r\n    now.setMonth(now.getMonth() - 6);\r\n    return now.getTime();\r\n  }\r\n  if (period === 'Y') { // 1 год\r\n    now.setFullYear(now.getFullYear() - 1);\r\n    return now.getTime();\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport const getFormatedCurrentDate = (): string =>\r\n  moment().format(\"D MMMM YYYY\");\r\n\r\n\r\n// export const getPeriodRequestData = (from: HISTORY_INTERVALS) => {\r\n//   return {\r\n//     start: CHART_INTERVALS[from],\r\n//     end: ,\r\n//   }\r\n// }"],"names":["fetchCoinsList","offset","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","coinList","wrap","_context","prev","next","getCoinListPending","axios","get","concat","COIN_API","GET_COIN_LIMIT","sent","getCoinListSuccess","data","t0","getCoinListFailure","error","stop","_x","apply","arguments","fetchCoinHistory","_ref2","coinId","_ref2$period","period","start","end","_ref2$interval","interval","_ref3","_callee2","coinHistory","_context2","getCoinHistoryPending","getCoinHistorySuccess","getCoinHistoryFailure","_x2","fetchCoinDetails","length","undefined","_ref4","_callee3","coinDetail","_context3","getCoinDetailsPending","getCoinDetailsSuccess","getCoinDetailsFailure","_x3","children","clickHandler","_jsx","onClick","className","ChartJS","register","_toConsumableArray","registerables","isPositive","_ref$interval","HISTORY_INTERVALS","DAY","chartRef","useRef","labels","map","item","date","chartData","datasets","fill","pointStyle","priceUsd","chartOptions","_objectSpread","responsive","maintainAspectRatio","GRAPH_COLOR_SHEMA","GRAPH_STATE","POSITIVE","NEGATIVE","interaction","intersect","scales","x","grid","display","ticks","maxTicksLimit","MAX_TICKS_LIMIT","callback","tickValue","index","moment","format","CHART_LABELS_FORMATS","y","position","plugins","tooltip","callbacks","label","context","formattedValue","title","DATE_FORMAT","CHART_TOOLTIP_TITLE","legend","chartResize","_chartRef$current","current","resize","useEffect","window","addEventListener","removeEventListener","Chart","type","ref","options","_ref$coin","coin","id","name","symbol","_useAppSelector","useAppSelector","state","history","historyList","isLoading","low","high","average","useAppDispatch","resetHistoryState","colSpan","_jsxs","src","toLowerCase","alt","getFormatedCurrentDate","numberAug","CoinChart","Link","to","ROUTES","DETAILS","selectedId","handleSelectCoin","rank","supply","marketCapUsd","volumeUsd24Hr","changePercent24Hr","vwap24Hr","_Fragment","requestData","getDateDayAgo","Date","getTime","priceFormater","CoinDetailRow","coinsList","coins","_useState","useState","_useState2","_slicedToArray","selectedCoinId","setSelectedId","setSelectedIdCoin","CoinTableRow","Array","from","GET_COIN_OFFSET","setOffset","list","resetCoinsState","CoinsTable","CoinsTablePreloader","Button","nextOffsetValue","useDispatch","useSelector","currentDate","calculateDate","now","setMonth","getMonth","setFullYear","getFullYear"],"sourceRoot":""}