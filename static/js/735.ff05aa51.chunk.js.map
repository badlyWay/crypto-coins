{"version":3,"file":"static/js/735.ff05aa51.chunk.js","mappings":"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","sources":["api/coins.ts","components/Button/Button.tsx","components/CoinChart/CoinChart.tsx","components/Preloaders/ExchangesTabelPreloader.tsx","hooks/store.ts","api/markets.ts","components/MarketsTable/MarketsTableRow.tsx","components/MarketsTable/MarketsTable.tsx","components/Preloaders/DetailsHeaderPreloader.tsx","components/Preloaders/DetailsHistoryPreloader.tsx","pages/Details/Details.tsx","utils/timeFormatter.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { AppDispatch } from \"../store\";\r\nimport {\r\n  getCoinListPending,\r\n  getCoinListSuccess,\r\n  getCoinListFailure,\r\n} from \"../store/reducers/coinSlice\";\r\nimport { ICoinResponseData, ICoinsListResponseData } from \"../types/coins\";\r\nimport { GET_COIN_LIMIT, COIN_API } from \"../constans/values\";\r\nimport {\r\n  ICoinHistoryRequestData,\r\n  ICoinHistoryResponseData,\r\n} from \"../types/coinHistory\";\r\nimport {\r\n  getCoinHistoryFailure,\r\n  getCoinHistoryPending,\r\n  getCoinHistorySuccess,\r\n} from \"../store/reducers/historySlice\";\r\nimport {\r\n  getCoinDetailsFailure,\r\n  getCoinDetailsPending,\r\n  getCoinDetailsSuccess,\r\n} from \"../store/reducers/detailsSlice\";\r\n\r\nexport const fetchCoinsList = (offset: number) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(getCoinListPending());\r\n    const coinList = await axios.get<ICoinsListResponseData>(\r\n      `${COIN_API}/assets?limit=${GET_COIN_LIMIT}&offset=${offset}`\r\n    );\r\n    dispatch(getCoinListSuccess(coinList.data.data));\r\n  } catch (error: any) {\r\n    dispatch(getCoinListFailure(error.error));\r\n  }\r\n};\r\n\r\nexport const fetchCoinHistory =\r\n  ({\r\n    coinId,\r\n    period: { start, end },\r\n    interval = \"h1\",\r\n  }: ICoinHistoryRequestData) =>\r\n    async (dispatch: AppDispatch) => {\r\n      try {\r\n        dispatch(getCoinHistoryPending());\r\n        const coinHistory = await axios.get<ICoinHistoryResponseData>(\r\n          `${COIN_API}/assets/${coinId}/history?interval=${interval}&start=${start}&end=${end}`\r\n        );\r\n        dispatch(getCoinHistorySuccess(coinHistory.data.data));\r\n      } catch (error: any) {\r\n        dispatch(getCoinHistoryFailure(error));\r\n      }\r\n    };\r\n\r\nexport const fetchCoinDetails =\r\n  (coinId: string = \"\") =>\r\n    async (dispatch: AppDispatch) => {\r\n      try {\r\n        dispatch(getCoinDetailsPending());\r\n        const coinDetail = await axios.get<ICoinResponseData>(\r\n          `${COIN_API}/assets/${coinId}`\r\n        );\r\n        dispatch(getCoinDetailsSuccess(coinDetail.data.data));\r\n      } catch (error: any) {\r\n        dispatch(getCoinDetailsFailure(error));\r\n      }\r\n    };\r\n","import React from 'react';\r\n\r\ninterface IButtonProps {\r\n    children: JSX.Element | string | JSX.Element[],\r\n    clickHandler: () => void,\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = ({ children, clickHandler }) => {\r\n    return (\r\n        <button\r\n            onClick={clickHandler}\r\n            className='p-4 capitalize text-center dark:shadow-none transition-all rounded-full shadow-lg shadow-primary-300 hover:shadow-accent-300 dark:bg-bg-100 hover:dark:bg-accent-200 active:scale-95 active:shadow-primary-300  sm:p-3'>\r\n            {children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React, { useEffect, useRef } from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    ChartData,\r\n    ChartOptions,\r\n    registerables,\r\n} from 'chart.js';\r\nimport { ICoinHistory } from '../../types/coinHistory';\r\nimport { CHART_LABELS_FORMATS, DATE_FORMAT, GRAPH_COLOR_SHEMA, GRAPH_STATE, HISTORY_INTERVALS, MAX_TICKS_LIMIT } from '../../constans/values';\r\nimport moment from 'moment';\r\n\r\ninterface ICoinChartProps {\r\n    data: ICoinHistory[],\r\n    interval?: string,\r\n    isPositive: boolean,\r\n}\r\n\r\nChartJS.register(...registerables);\r\n\r\nconst CoinChart: React.FC<ICoinChartProps> = ({ data, isPositive, interval = HISTORY_INTERVALS.DAY }) => {\r\n    const chartRef = useRef<ChartJS>(null);\r\n    const labels = data.map(item => item.date);\r\n    const chartData: ChartData = {\r\n        labels: labels,\r\n        datasets: [{\r\n            fill: true,\r\n            pointStyle: false,\r\n            data: data.map(item => +item.priceUsd),\r\n        }],\r\n    };\r\n\r\n    const chartOptions: ChartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        ...GRAPH_COLOR_SHEMA[isPositive ? GRAPH_STATE.POSITIVE : GRAPH_STATE.NEGATIVE],\r\n        interaction: {\r\n            intersect: false,\r\n        },\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    maxTicksLimit: MAX_TICKS_LIMIT,\r\n                    callback: (tickValue, index) => {\r\n                        return moment(labels[index]).format(CHART_LABELS_FORMATS[interval]);\r\n                    },\r\n                },\r\n            },\r\n            y: {\r\n                position: 'right',\r\n            },\r\n        },\r\n        plugins: {\r\n            tooltip: {\r\n                callbacks: {\r\n                    label: (context: any) => `${context.formattedValue} $`,\r\n                    title: (context: any) => moment(context[0].label).format(DATE_FORMAT.CHART_TOOLTIP_TITLE),\r\n                }\r\n            },\r\n            legend: {\r\n                display: false,\r\n            }\r\n        },\r\n    };\r\n\r\n    const chartResize = () => {\r\n        chartRef.current?.resize();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener('resize', chartResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', chartResize);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Chart\r\n            type='line'\r\n            ref={chartRef}\r\n            data={chartData}\r\n            options={chartOptions}\r\n            className='cursor-pointer'\r\n        />\r\n    )\r\n}\r\n\r\nexport default CoinChart","import React from 'react'\r\nimport { COIN_EXCHANGES_LIMIT } from '../../constans/values'\r\n\r\nconst ExchangesTabelPreloader: React.FC = () => {\r\n    return (\r\n        <div className='animate-pulse'>\r\n            {Array.from({ length: COIN_EXCHANGES_LIMIT }).map((item, index) =>\r\n                <div key={index} className='h-12 md:h-10 sm:h-9 w-full bg-accent-100 my-1 dark:bg-bg-200' />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExchangesTabelPreloader;","import { useDispatch, useSelector } from 'react-redux';\r\nimport type { TypedUseSelectorHook } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '../store';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios from \"axios\";\r\nimport { AppDispatch } from \"../store\";\r\nimport {\r\n    getCoinExchangesFailure,\r\n    getCoinMarketsPending,\r\n    getCoinMarketsSuccess\r\n} from \"../store/reducers/marketsSlice\";\r\nimport { COIN_API, COIN_EXCHANGES_LIMIT } from \"../constans/values\";\r\nimport { ICoinMarketsResponseData } from \"../types/coinMarkets\";\r\n\r\nexport const fetchCoinMarkets = (coinId: string = \"\", offset: number) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(getCoinMarketsPending());\r\n        const { data } = await axios.get<ICoinMarketsResponseData>(`${COIN_API}/assets/${coinId}/markets?limit=${COIN_EXCHANGES_LIMIT}&offset=${offset}`);\r\n        dispatch(getCoinMarketsSuccess(data.data));\r\n    } catch (error: any) {\r\n        dispatch(getCoinExchangesFailure(error));\r\n    }\r\n};","import React from 'react';\r\nimport { ICoinMarkets } from '../../types/coinMarkets';\r\nimport { numberAug } from '../../utils/stringParser';\r\n\r\ninterface IMarketsTableRowProps {\r\n    market: ICoinMarkets,\r\n};\r\n\r\nconst MarketsTableRow: React.FC<IMarketsTableRowProps> = ({ market }) => {\r\n    const {\r\n        exchangeId,\r\n        baseSymbol,\r\n        quoteSymbol,\r\n        priceUsd,\r\n        volumeUsd24Hr,\r\n        volumePercent,\r\n    } = market;\r\n\r\n    return (\r\n        <tr\r\n            className='bg-white dark:bg-bg-200 hover:dark:bg-bg-100 border-b border-primary-300 dark:border-bg-300'\r\n        >\r\n            <td className='text-start p-4  sm:text-sm sm:p-2'>{exchangeId}</td>\r\n            <td className='flex text-start p-4 items-center  sm:text-sm sm:p-2'>\r\n                {baseSymbol}/{quoteSymbol}\r\n            </td>\r\n            <td className='text-start p-4 md:hidden'>${numberAug(priceUsd)}</td>\r\n            <td className='text-start p-4 sm:text-sm sm:p-2'>${numberAug(volumeUsd24Hr, 0)}</td>\r\n            <td className='p-4 text-end md:hidden'>{numberAug(volumePercent)}%</td>\r\n\r\n        </tr>\r\n    )\r\n};\r\n\r\nexport default MarketsTableRow;","import React from 'react';\r\nimport MarketsTableRow from './MarketsTableRow';\r\nimport { ICoinMarkets } from '../../types/coinMarkets';\r\n\r\ninterface IExchangesTableProps {\r\n    markets: ICoinMarkets[],\r\n}\r\n\r\nconst MarketsTable: React.FC<IExchangesTableProps> = ({ markets }) => {\r\n    const renderMarketsTableRow = (list: ICoinMarkets[]) =>\r\n        list.map(item => <MarketsTableRow key={item.baseId} market={item} />);\r\n\r\n    return (\r\n        <table className=\"table-auto w-full mx-auto relative border-collapse\">\r\n            <thead className='bg-primary-300 dark:bg-bg-300 sticky top-0'>\r\n                <tr>\r\n                    <th className='text-start p-4 sm:text-sm sm:p-2'>Exchange</th>\r\n                    <th className='text-start p-4 sm:text-sm sm:p-2'>Pair</th>\r\n                    <th className='text-start p-4 md:hidden'>Price</th>\r\n                    <th className='text-start p-4 sm:text-sm sm:p-2'>Volume(24Hr)</th>\r\n                    <th className='text-end p-4 md:hidden'>Volume(%)</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderMarketsTableRow(markets)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default MarketsTable;","import React from 'react';\r\n\r\nconst DetailsHeaderPreloader: React.FC = () => {\r\n    return (\r\n        <div className=\"animate-pulse flex justify-between flex-wrap gap-3 items-center mb-8\">\r\n            <div className=\" flex gap-3 items-stretch sm:w-full\">\r\n                <div className=\"h-20 w-14 bg-accent-100 dark:bg-bg-200 rounded-lg md:p-2\">\r\n                </div>\r\n                <div className=\"flex flex-col justify-evenly\">\r\n                    <div className=\"h-8 w-44 mr-4 bg-accent-100 dark:bg-bg-200 \" />\r\n                    <div className=\"h-7 w-44 bg-accent-100 dark:bg-bg-200 \" />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex gap-3 items-stretch sm:justify-between sm:w-full\">\r\n                <div className=\"w-28 h-20 bg-accent-100 dark:bg-bg-200 p-3 rounded-lg md:p-2\">\r\n                </div>\r\n                <div className=\"w-28 h-20 bg-accent-100 dark:bg-bg-200 p-3 rounded-lg md:p-2\">\r\n                </div>\r\n                <div className=\"w-28 h-20 bg-accent-100 dark:bg-bg-200 p-3 rounded-lg md:p-2\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsHeaderPreloader;","import React from 'react';\r\n\r\nconst DetailsHistoryPreloader: React.FC = () => {\r\n    return (\r\n        <div className=\"animate-pulse flex items-stretch justify-between gap-3 md:flex-col md:items-center md:justify-center\">\r\n            <div className=\"w-[70%] md:w-full h-[450px] md:h-96 sm:h-52 bg-accent-100 dark:bg-bg-200\">\r\n            </div>\r\n\r\n            <div className=\"px-3 w-[30%] flex flex-col justify-between md:w-full md:items-start md:my-4 md:flex-row-reverse gap-4 sm:flex-wrap-reverse\">\r\n                <div className=\"mb-4 md:mb-0 sm:w-full\">\r\n                    <div className='h-7 w-48  mb-2 bg-accent-100 dark:bg-bg-200'>\r\n                    </div>\r\n                    <div className='h-7 w-48  mb-2 bg-accent-100 dark:bg-bg-200'>\r\n                    </div>\r\n                    <div className='h-7 w-52  mb-2 bg-accent-100 dark:bg-bg-200'>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"h-16 md:w-1/2 sm:w-full bg-accent-100 dark:bg-bg-200\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsHistoryPreloader;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\nimport { fetchCoinDetails, fetchCoinHistory } from \"../../api/coins\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/store\";\r\nimport { numberAug, priceFormater } from \"../../utils/stringParser\";\r\nimport CoinChart from \"../../components/CoinChart\";\r\nimport { ICoinHistoryRequestData } from \"../../types/coinHistory\";\r\nimport { calculateDate } from \"../../utils/timeFormatter\";\r\nimport {\r\n    DATA_INTERVALS,\r\n    HISTORY_INTERVALS,\r\n    COIN_MARKETS_OFFSET,\r\n    COIN_MARKETS_LIMIT,\r\n} from \"../../constans/values\";\r\nimport { fetchCoinMarkets } from \"../../api/markets\";\r\nimport MarketsTable from \"../../components/MarketsTable\";\r\nimport { resetDetailsState } from \"../../store/reducers/detailsSlice\";\r\nimport { resetHistoryState } from \"../../store/reducers/historySlice\";\r\nimport { resetMarketsState } from \"../../store/reducers/marketsSlice\";\r\nimport DetailsHeaderPreloader from \"../../components/Preloaders/DetailsHeaderPreloader\";\r\nimport DetailsHistoryPreloader from \"../../components/Preloaders/DetailsHistoryPreloader\";\r\nimport ExchangesTabelPreloader from \"../../components/Preloaders/ExchangesTabelPreloader\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst Details: React.FC = () => {\r\n    const { id: paramId } = useParams<string>();\r\n    const {\r\n        data: {\r\n            rank,\r\n            name,\r\n            symbol,\r\n            priceUsd,\r\n            marketCapUsd,\r\n            volumeUsd24Hr,\r\n            supply,\r\n            explorer = \"#\",\r\n        },\r\n        isLoading: isDetailLoading,\r\n    } = useAppSelector((state) => state.details);\r\n    const {\r\n        data,\r\n        isPositive,\r\n        low,\r\n        high,\r\n        average,\r\n        changes,\r\n        isLoading: isHistoryLoading,\r\n    } = useAppSelector((state) => state.history);\r\n    const { list: marketList, isLoading: isMarketsLoading } = useAppSelector(state => state.markets);\r\n    const [chartInterval, setChatInterval] = useState<string>(HISTORY_INTERVALS.DAY);\r\n    const [exchangesOffset, setExchangesOffset] = useState<number>(COIN_MARKETS_OFFSET);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        const requestData: ICoinHistoryRequestData = {\r\n            coinId: paramId ?? \"\",\r\n            interval: DATA_INTERVALS[chartInterval],\r\n            period: {\r\n                start: calculateDate(chartInterval),\r\n                end: new Date().getTime(),\r\n            },\r\n        };\r\n\r\n        dispatch(fetchCoinDetails(paramId));\r\n        dispatch(fetchCoinHistory(requestData));\r\n        dispatch(fetchCoinMarkets(paramId, exchangesOffset));\r\n\r\n        return () => {\r\n            dispatch(resetDetailsState());\r\n            dispatch(resetHistoryState());\r\n            dispatch(resetMarketsState());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const requestData: ICoinHistoryRequestData = {\r\n            coinId: paramId ?? \"\",\r\n            interval: DATA_INTERVALS[chartInterval],\r\n            period: {\r\n                start: calculateDate(chartInterval),\r\n                end: new Date().getTime(),\r\n            },\r\n        };\r\n        dispatch(fetchCoinHistory(requestData))\r\n    }, [chartInterval]);\r\n\r\n    const changeInterval = (event: any) => {\r\n        setChatInterval(event.target.value);\r\n    };\r\n\r\n    const loadExchangesClickHandler = () => {\r\n        const nextOffsetValue = exchangesOffset + COIN_MARKETS_LIMIT;\r\n        dispatch(fetchCoinMarkets(paramId, nextOffsetValue));\r\n        setExchangesOffset(nextOffsetValue);\r\n    };\r\n\r\n    const renderChartIntervals = () => Object.values(HISTORY_INTERVALS).map((item, index) =>\r\n\r\n        <div key={item}>\r\n            <input\r\n                id={`radio-${index}`}\r\n                type=\"radio\"\r\n                name=\"interval\"\r\n                value={item}\r\n                className=\"hidden peer\"\r\n                checked={chartInterval === item}\r\n                onChange={changeInterval}\r\n            />\r\n            <label\r\n                htmlFor={`radio-${index}`}\r\n                className=\"block w-12 py-2 text-center transition-all cursor-pointer shadow-md peer-hover:bg-accent-100 peer-checked:bg-accent-100 peer-active:scale-95 peer-hover:dark:bg-bg-100 rounded-lg peer-checked:dark:bg-accent-200 md:text-base sm:text-sm sm:w-10\"\r\n            >\r\n                {item}\r\n            </label>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isDetailLoading ? <DetailsHeaderPreloader /> :\r\n                <div className=\"flex justify-between flex-wrap gap-3 items-center mb-8\">\r\n                    <div className=\"flex gap-3 items-stretch sm:w-full\">\r\n                        <div className=\"text-center bg-white shadow-md dark:shadow-none dark:bg-bg-200 p-3 rounded-lg md:p-2\">\r\n                            <p className=\"text-3xl mb-2 md:text-2xl\">{rank}</p>\r\n                            <div className=\"uppercase font-light text-xs\">rank</div>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col justify-evenly\">\r\n                            <div className=\"flex items-center\">\r\n                                <h2 className=\"text-2xl mr-4 md:text-xl\">\r\n                                    {name} ({symbol})\r\n                                </h2>\r\n                                <a href={explorer} rel=\"nofollow\" target=\"blank\" title={`${name} website`}>\r\n                                    <BsBoxArrowUpRight size={20} className=\" transition-transform hover:scale-110\" />\r\n                                </a>\r\n\r\n                            </div>\r\n                            <div className=\"flex items-center gap-3\">\r\n                                <span className=\"text-xl md:text-lg\">${numberAug(priceUsd)}</span>\r\n                                <span\r\n                                    className={`${isPositive ? \"text-chart-1\" : \"text-chart-0\"}`}\r\n                                >\r\n                                    {isPositive ? \"▲\" : \"▼\"}\r\n                                    {priceFormater(changes)}%\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-3 items-stretch sm:justify-between sm:w-full\">\r\n                        <div className=\"bg-white shadow-md dark:shadow-none dark:bg-bg-200 p-3 rounded-lg md:p-2\">\r\n                            <div className=\"text-xs font-light mb-2\">Market Cap</div>\r\n                            <div className=\"text-xl md:text-base sm:text-sm\">${priceFormater(marketCapUsd)}</div>\r\n                        </div>\r\n                        <div className=\"bg-white shadow-md dark:shadow-none dark:bg-bg-200 p-3 rounded-lg md:p-2\">\r\n                            <div className=\"text-xs font-light mb-2\">Volume (24Hr)</div>\r\n                            <div className=\"text-xl md:text-base sm:text-sm\">${priceFormater(volumeUsd24Hr)}</div>\r\n                        </div>\r\n                        <div className=\"bg-white shadow-md dark:shadow-none dark:bg-bg-200 p-3 rounded-lg md:p-2\">\r\n                            <div className=\"text-xs font-light mb-2\">Supply</div>\r\n                            <div className=\"text-xl md:text-base sm:text-sm\">{`${priceFormater(\r\n                                supply\r\n                            )} ${symbol}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {isHistoryLoading || isDetailLoading ? <DetailsHistoryPreloader /> : <div className=\"flex items-stretch justify-between gap-3 md:flex-col md:items-center md:justify-center\">\r\n                <div className=\"w-3/4 md:w-full\">\r\n                    <CoinChart data={data} isPositive={isPositive} interval={chartInterval} />\r\n                </div>\r\n\r\n                <div className=\"px-3 w-[30%] flex flex-col justify-between md:w-full md:items-start md:my-4 md:flex-row-reverse gap-4 sm:flex-wrap-reverse\">\r\n                    <div className=\"mb-4 md:mb-0 sm:w-full\">\r\n                        <div className='text-lg mb-2 md:text-base sm:text-sm'>\r\n                            <span className='mr-3 text-primary-200 font-semibold uppercase'>Low</span>\r\n                            <span>${numberAug(low, 5)}</span>\r\n                        </div>\r\n                        <div className='text-lg mb-2 md:text-base sm:text-sm'>\r\n                            <span className='mr-3 text-primary-200 font-semibold uppercase'>Hight</span>\r\n                            <span>${numberAug(high, 5)}</span>\r\n                        </div>\r\n                        <div className='text-lg mb-2 md:text-base sm:text-sm'>\r\n                            <span className='mr-3 text-primary-200 font-semibold uppercase'>Average</span>\r\n                            <span>${numberAug(average, 5)}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:w-full\">\r\n                        <div className=\"mb-3 text-primary-200 font-semibold uppercase md:text-base sm:text-sm\">Data period</div>\r\n                        <div className=\"flex items-center justify-between flex-wrap gap-1 sm:w-full\">\r\n                            {renderChartIntervals()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n            <div className=\"mt-20 lg:mt-14 md:mt-6\">\r\n                <MarketsTable markets={marketList} />\r\n                {isMarketsLoading && <ExchangesTabelPreloader />}\r\n                <div className=\"flex items-center justify-center my-4\">\r\n                    <Button\r\n                        clickHandler={loadExchangesClickHandler}>\r\n                        load more\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Details;\r\n","import moment from \"moment\";\r\nimport {\r\n  HISTORY_INTERVALS,\r\n  WEEK_DAYS,\r\n  DAY_MILLISECONDS\r\n} from \"../constans/values\";\r\n\r\nexport const getDateDayAgo = (): number => {\r\n  const currentDate = new Date().getTime();\r\n\r\n  return new Date(currentDate - DAY_MILLISECONDS).getTime();\r\n};\r\n\r\nexport const calculateDate = (period: string): number => {\r\n  let now = new Date();\r\n  const { DAY, MONTH, THREE_MONTH, SIX_MONTH, WEEK, YEAR } = HISTORY_INTERVALS;\r\n\r\n  switch (period) {\r\n    case DAY: return getTimeDayAgo(now);\r\n    case WEEK: return getTimeWeekAgo(now);\r\n    case MONTH: return getTimeMonthAgo(now);\r\n    case THREE_MONTH: return getTimeThreeMonthAgo(now);\r\n    case SIX_MONTH: return getTimeSixMonthAgo(now);\r\n    case YEAR: return getTimeYearAgo(now);\r\n    default: return 0;\r\n  };\r\n};\r\n\r\nconst getTimeDayAgo = (nowTime: Date): number => new Date(nowTime.getTime() - (DAY_MILLISECONDS)).getTime();\r\n\r\nconst getTimeWeekAgo = (nowTime: Date): number => new Date(nowTime.getTime() - (WEEK_DAYS * DAY_MILLISECONDS)).getTime();\r\n\r\nconst getTimeMonthAgo = (nowTime: Date): number => {\r\n  nowTime.setMonth(nowTime.getMonth() - 1);\r\n  return nowTime.getTime();\r\n};\r\n\r\nconst getTimeThreeMonthAgo = (nowTime: Date): number => {\r\n  nowTime.setMonth(nowTime.getMonth() - 3);\r\n  return nowTime.getTime();\r\n};\r\n\r\nconst getTimeSixMonthAgo = (nowTime: Date): number => {\r\n  nowTime.setMonth(nowTime.getMonth() - 6);\r\n  return nowTime.getTime();\r\n};\r\n\r\nconst getTimeYearAgo = (nowTime: Date): number => {\r\n  nowTime.setFullYear(nowTime.getFullYear() - 1);\r\n  return nowTime.getTime();\r\n};\r\n\r\nexport const getFormatedCurrentDate = (): string =>\r\n  moment().format(\"D MMMM YYYY\");\r\n"],"names":["fetchCoinsList","offset","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","coinList","wrap","_context","prev","next","getCoinListPending","axios","get","concat","COIN_API","GET_COIN_LIMIT","sent","getCoinListSuccess","data","t0","getCoinListFailure","error","stop","_x","apply","arguments","fetchCoinHistory","_ref2","coinId","_ref2$period","period","start","end","_ref2$interval","interval","_ref3","_callee2","coinHistory","_context2","getCoinHistoryPending","getCoinHistorySuccess","getCoinHistoryFailure","_x2","fetchCoinDetails","length","undefined","_ref4","_callee3","coinDetail","_context3","getCoinDetailsPending","getCoinDetailsSuccess","getCoinDetailsFailure","_x3","children","clickHandler","_jsx","onClick","className","ChartJS","register","_toConsumableArray","registerables","isPositive","_ref$interval","HISTORY_INTERVALS","DAY","chartRef","useRef","labels","map","item","date","chartData","datasets","fill","pointStyle","priceUsd","chartOptions","_objectSpread","responsive","maintainAspectRatio","GRAPH_COLOR_SHEMA","GRAPH_STATE","POSITIVE","NEGATIVE","interaction","intersect","scales","x","grid","display","ticks","maxTicksLimit","MAX_TICKS_LIMIT","callback","tickValue","index","moment","format","CHART_LABELS_FORMATS","y","position","plugins","tooltip","callbacks","label","context","formattedValue","title","DATE_FORMAT","CHART_TOOLTIP_TITLE","legend","chartResize","_chartRef$current","current","resize","useEffect","window","addEventListener","removeEventListener","Chart","type","ref","options","Array","from","COIN_EXCHANGES_LIMIT","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchCoinMarkets","_yield$axios$get","getCoinMarketsPending","getCoinMarketsSuccess","getCoinExchangesFailure","market","exchangeId","baseSymbol","quoteSymbol","volumeUsd24Hr","volumePercent","_jsxs","numberAug","list","markets","MarketsTableRow","baseId","paramId","useParams","id","_useAppSelector","state","details","_useAppSelector$data","rank","name","symbol","marketCapUsd","supply","_useAppSelector$data$","explorer","isDetailLoading","isLoading","_useAppSelector2","history","low","high","average","changes","isHistoryLoading","_useAppSelector3","marketList","isMarketsLoading","_useState","useState","_useState2","_slicedToArray","chartInterval","setChatInterval","_useState3","COIN_MARKETS_OFFSET","_useState4","exchangesOffset","setExchangesOffset","requestData","DATA_INTERVALS","calculateDate","Date","getTime","resetDetailsState","resetHistoryState","resetMarketsState","changeInterval","event","target","value","DetailsHeaderPreloader","href","rel","BsBoxArrowUpRight","size","priceFormater","DetailsHistoryPreloader","CoinChart","Object","values","checked","onChange","htmlFor","MarketsTable","ExchangesTabelPreloader","Button","nextOffsetValue","COIN_MARKETS_LIMIT","getDateDayAgo","currentDate","DAY_MILLISECONDS","now","MONTH","THREE_MONTH","SIX_MONTH","WEEK","YEAR","getTimeDayAgo","getTimeWeekAgo","getTimeMonthAgo","getTimeThreeMonthAgo","getTimeSixMonthAgo","getTimeYearAgo","nowTime","WEEK_DAYS","setMonth","getMonth","setFullYear","getFullYear","getFormatedCurrentDate"],"sourceRoot":""}